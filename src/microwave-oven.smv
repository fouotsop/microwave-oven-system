MODULE main
VAR
  Heat: boolean;
  Start: boolean;
  Closed: boolean;
  Error: boolean;

ASSIGN
  init(Heat) := FALSE;
  init(Start) := FALSE;
  init(Closed) := FALSE;
  init(Error) := FALSE;

TRANS
  -- Transition when the oven starts
  !Start & !Closed & !Heat & !Error ->
    (next(Start) = TRUE) &
    (next(Closed) = FALSE) &
    (next(Heat) = FALSE) &
    (next(Error) = TRUE);

TRANS
  -- Transition when system is in the initial state and the door is closed
  (!Start & !Closed & !Heat & !Error) ->
    (next(Start) = FALSE) &
    (next(Closed) = TRUE) &
    (next(Heat) = FALSE) &
    (next(Error) = FALSE);

TRANS
  -- Transition when the oven starts with an error and the door is closed
  Start & !Closed & !Heat & Error -> (next(Start) = TRUE) & (next(Closed) = TRUE) & (next(Heat) = FALSE) & (next(Error) = TRUE);

TRANS
  -- Transition when the door is opened with the oven started along with an error
  Start & Closed & !Heat & Error -> (next(Start) = TRUE) & (next(Closed) = FALSE) & (next(Heat) = FALSE) & (next(Error) = TRUE);

TRANS
  -- Transition when the oven is reset
  Start & Closed & !Heat & Error -> (next(Start) = FALSE) & (next(Closed) = TRUE) & (next(Heat) = FALSE) & (next(Error) = FALSE);

TRANS
  -- Transition when the door of the oven is opened after reset
  !Start & Closed & !Heat & !Error -> (next(Start) = FALSE) & (next(Closed) = FALSE) & (next(Heat) = FALSE) & (next(Error) = FALSE);

TRANS
  -- Transition when the oven is started with the door closed
  !Start & Closed & !Heat & !Error -> (next(Start) = TRUE) & (next(Closed) = TRUE) & (next(Heat) = FALSE) & (next(Error) = FALSE);

TRANS
  -- Transition when the oven warms up
  Start & Closed & !Heat & !Error -> (next(Start) = TRUE) & (next(Closed) = TRUE) & (next(Heat) = TRUE) & (next(Error) = FALSE);

TRANS
  -- Transition when the oven starts cooking
  Start & Closed & Heat & !Error -> (next(Start) = FALSE) & (next(Closed) = TRUE) & (next(Heat) = TRUE) & (next(Error) = FALSE);

TRANS
  -- Transition when the oven finishes cooking
  !Start & Closed & Heat & !Error -> (next(Start) = FALSE) & (next(Closed) = TRUE) & (next(Heat) = FALSE) & (next(Error) = FALSE);

TRANS
  -- Transition when the oven is cooking
  !Start & Closed & Heat & !Error -> (next(Start) = FALSE) & (next(Closed) = TRUE) & (next(Heat) = TRUE) & (next(Error) = FALSE);

TRANS
  -- Transition when the oven is opened during cooking
  !Start & Closed & Heat & !Error -> (next(Start) = FALSE) & (next(Closed) = FALSE) & (next(Heat) = FALSE) & (next(Error) = FALSE);

SPEC AG (Heat -> Closed);  -- Safety property: If the oven heats, then the door is closed

SPEC AG (Start -> AF Heat); -- Liveness property: Whenever the start button is pushed, eventually the oven will heat

SPEC AG ((Start & !Error) -> AF Heat); -- Liveness property: Whenever the oven is correctly started, eventually the oven will heat

SPEC AG (Error -> EF Heat); -- Liveness property: Whenever an error occurs, it will still be possible to cook